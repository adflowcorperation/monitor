##################################inputStream###################################
################################################################################
RULE Socket Read InputStream
CLASS ^java.io.InputStream
METHOD read
HELPER  kr.co.adflow.monitor.helper.SocketHelper
AT EXIT
IF TRUE
DO traceln("InputStream....READ"),
   inputStreamSort($0,$!)
ENDRULE


##################################OutPutStreamWriter###################################
################################################################################
#RULE OutputStreamWriter
#CLASS ^java.io.OutputStreamWriter
#METHOD write
#HELPER kr.co.adflow.monitor.helper.SocketHelper
#AT EXIT
#IF TRUE
#DO traceln("outputStream..Writer.....")
#ENDRULE
####################################PrintWriter###################################################
#######################################################################################
RULE Socket PrintWriter print
CLASS ^java.io.PrintWriter
METHOD print
HELPER  kr.co.adflow.monitor.helper.SocketHelper
AT EXIT
IF TRUE
DO traceln("PrintWriter print.....")
ENDRULE

RULE Socket PrintWriter println
CLASS ^java.io.PrintWriter
METHOD println
HELPER  kr.co.adflow.monitor.helper.SocketHelper
AT EXIT
IF TRUE
DO traceln("PrintWriter println.....")
ENDRULE

RULE Socket PrintWriter write
CLASS ^java.io.PrintWriter
METHOD write
HELPER  kr.co.adflow.monitor.helper.SocketHelper
AT EXIT
IF TRUE
DO traceln("PrintWriter Write.....")
ENDRULE


###################################################################################
###################ServerSocket Create################################################
#################################################################################
RULE new ServerSocket()1 debug
CLASS ^java.net.ServerSocket
METHOD <init>()
HELPER  kr.co.adflow.monitor.helper.SocketHelper
AT ENTRY
IF TRUE
DO serverSocketInfo($0)
ENDRULE

RULE new ServerSocket()2 debug
CLASS ^java.net.ServerSocket
METHOD <init>(int)
HELPER  kr.co.adflow.monitor.helper.SocketHelper
AT ENTRY
IF TRUE
DO serverSocketInfo($0)
ENDRULE


RULE new ServerSocket()3 debug
CLASS ^java.net.ServerSocket
METHOD <init>(int,int)
HELPER  kr.co.adflow.monitor.helper.SocketHelper
AT ENTRY
IF TRUE
DO serverSocketInfo($0)
ENDRULE

RULE new ServerSocket()4 debug
CLASS ^java.net.ServerSocket
METHOD <init>(int,int,java.net.InetAddress)
HELPER  kr.co.adflow.monitor.helper.SocketHelper
AT ENTRY
IF TRUE
DO serverSocketInfo($0)
ENDRULE
###################################################################################
###################Socket Create################################################
#################################################################################
RULE new Socket() debug
CLASS ^java.net.Socket
METHOD <init>()
HELPER  kr.co.adflow.monitor.helper.SocketHelper
AT ENTRY
IF TRUE
DO socketInfo($0)
ENDRULE

RULE new Socket(java.lang.String, int) debug
CLASS ^java.net.Socket
METHOD <init>(java.lang.String, int)
HELPER  kr.co.adflow.monitor.helper.SocketHelper
AT ENTRY
IF TRUE
DO socketInfo($0)
ENDRULE

RULE new Socket(java.net.InetAddress, int) debug
CLASS ^java.net.Socket
METHOD <init>(java.net.InetAddress, int)
HELPER  kr.co.adflow.monitor.helper.SocketHelper
AT ENTRY
IF TRUE
DO socketInfo($0)
ENDRULE

RULE new Socket(String, int, java.net.InetAddress, int) debug
CLASS ^java.net.Socket
METHOD <init>(java.net.InetAddress, int, java.net.InetAddress, int)
HELPER  kr.co.adflow.monitor.helper.SocketHelper
AT ENTRY
IF TRUE
DO socketInfo($0)
ENDRULE

RULE new Socket(java.net.InetAddress, int, java.net.InetAddress, int) debug
CLASS ^java.net.Socket
METHOD <init>(java.net.InetAddress, int, java.net.InetAddress, int)
HELPER  kr.co.adflow.monitor.helper.SocketHelper
AT ENTRY
IF TRUE
DO socketInfo($0)
ENDRULE

RULE new Socket(java.net.SocketImpl) debug
CLASS ^java.net.Socket
METHOD <init>(java.net.SocketImpl)
HELPER  kr.co.adflow.monitor.helper.SocketHelper
AT ENTRY
IF TRUE
DO socketInfo($0)
ENDRULE
#####################################################################################################################